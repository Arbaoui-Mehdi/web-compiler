{"version":3,"sources":["webpack:///webpack/bootstrap f6630093936ea7a7cf73","webpack:///./src/server/modules/compilers.js","webpack:///./src/server/modules/server.js","webpack:///external \"child_process\"","webpack:///external \"fs\"","webpack:///./src/server/app.js","webpack:///./src/server/modules/container.js","webpack:///./src/server/modules/sandbox.js","webpack:///external \"crypto\"","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"socket.io\""],"names":["compilers","express","require","app","http","Server","io","listen","port","res","error","console","log","server","serverListen","crypto","Container","timeout_val","path","vm_name","on","socket","data","language","stdin","folder","container","random_char","compiler_name","file","output_command","language_name","compiler_args","sandbox","code","run","size","randomBytes","toString","socketConnection","Sandbox","timeout_value","file_name","languageName","e_arguments","stdin_data","langName","extra_arguments","success","prepare","e","execute","exec","fs","command","st","file_path","writeFile","err","myC","intid","setInterval","readFile","err2","data2","lines","split","time","clearInterval"],"mappings":"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","file":"bundle.server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f6630093936ea7a7cf73","/***\n *      /$$$$$$                                    /$$ /$$\n *     /$$__  $$                                  |__/| $$\n *    | $$  \\__/  /$$$$$$  /$$$$$$/$$$$   /$$$$$$  /$$| $$  /$$$$$$   /$$$$$$   /$$$$$$$\n *    | $$       /$$__  $$| $$_  $$_  $$ /$$__  $$| $$| $$ /$$__  $$ /$$__  $$ /$$_____/\n *    | $$      | $$  \\ $$| $$ \\ $$ \\ $$| $$  \\ $$| $$| $$| $$$$$$$$| $$  \\__/|  $$$$$$\n *    | $$    $$| $$  | $$| $$ | $$ | $$| $$  | $$| $$| $$| $$_____/| $$       \\____  $$\n *    |  $$$$$$/|  $$$$$$/| $$ | $$ | $$| $$$$$$$/| $$| $$|  $$$$$$$| $$       /$$$$$$$/\n *     \\______/  \\______/ |__/ |__/ |__/| $$____/ |__/|__/ \\_______/|__/      |_______/\n *                                      | $$\n *                                      | $$\n *                                      |__/\n */\n/**\n * [0][compiler/interpretor]\n * [1][file name]\n * [2][command to invoke the compiled program]\n * [3][language name]\n * [4][additional arguments/flags for compilers]\n */\nconst compilers = [\n  [\"python\",\"file.py\",\"\",\"Python\",\"\"],\n  [\"\\'gcc -o /usercode/a.out\\'\",\"file.c\",\"/usercode/a.out\",\"C\",\"\"],\n  [\"assembler\",\"file.asm\",\"/usercode/file\",\"Assembly\",\"/usercode/file\"]\n];\n\nexport { compilers };\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/modules/compilers.js","/***\n *      /$$$$$$\n *     /$$__  $$\n *    | $$  \\__/  /$$$$$$   /$$$$$$  /$$    /$$ /$$$$$$   /$$$$$$\n *    |  $$$$$$  /$$__  $$ /$$__  $$|  $$  /$$//$$__  $$ /$$__  $$\n *     \\____  $$| $$$$$$$$| $$  \\__/ \\  $$/$$/| $$$$$$$$| $$  \\__/\n *     /$$  \\ $$| $$_____/| $$        \\  $$$/ | $$_____/| $$\n *    |  $$$$$$/|  $$$$$$$| $$         \\  $/  |  $$$$$$$| $$\n *     \\______/  \\_______/|__/          \\_/    \\_______/|__/\n *\n *\n *\n */\n/**\n *\n *  Requirements\n *\n */\nconst express = require('express');\nconst app     = express();\nconst http    = require('http').Server(app);\nconst io      = require('socket.io').listen(http);\nconst port    = 8080;\n\n/**\n *\n * Server Class\n *\n */\nclass Server {\n\n  /**\n   * [serverListen description]\n   * @param  {[type]} port [description]\n   * @return {[type]}      [description]\n   */\n  serverListen(port){\n    http.listen(port, function(res, error){\n      console.log(`Listening at ${port}`);\n    });\n  }\n\n}\n\n/**\n * Init\n */\nlet server = new Server();\nserver.serverListen(port);\n\n/**\n * Exports\n */\nexport { io };\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/modules/server.js","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 3\n// module chunks = 0","/***\n *      /$$$$$$  /$$$$$$$  /$$$$$$$\n *     /$$__  $$| $$__  $$| $$__  $$\n *    | $$  \\ $$| $$  \\ $$| $$  \\ $$\n *    | $$$$$$$$| $$$$$$$/| $$$$$$$/\n *    | $$__  $$| $$____/ | $$____/\n *    | $$  | $$| $$      | $$\n *    | $$  | $$| $$      | $$\n *    |__/  |__/|__/      |__/\n *\n *\n *\n */\nrequire('./modules/server.js')\nrequire('./modules/container.js')\nrequire('./modules/compilers.js')\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/app.js","/***\n *      /$$$$$$                        /$$               /$$\n *     /$$__  $$                      | $$              |__/\n *    | $$  \\__/  /$$$$$$  /$$$$$$$  /$$$$$$    /$$$$$$  /$$ /$$$$$$$   /$$$$$$   /$$$$$$\n *    | $$       /$$__  $$| $$__  $$|_  $$_/   |____  $$| $$| $$__  $$ /$$__  $$ /$$__  $$\n *    | $$      | $$  \\ $$| $$  \\ $$  | $$      /$$$$$$$| $$| $$  \\ $$| $$$$$$$$| $$  \\__/\n *    | $$    $$| $$  | $$| $$  | $$  | $$ /$$ /$$__  $$| $$| $$  | $$| $$_____/| $$\n *    |  $$$$$$/|  $$$$$$/| $$  | $$  |  $$$$/|  $$$$$$$| $$| $$  | $$|  $$$$$$$| $$\n *     \\______/  \\______/ |__/  |__/   \\___/   \\_______/|__/|__/  |__/ \\_______/|__/\n *\n *\n *\n */\n/**\n *\n *  Requirements\n *\n */\nconst crypto  = require('crypto');\nimport { io }        from './server';\nimport { Sandbox }   from './sandbox';\nimport { compilers } from './compilers';\n\nclass Container {\n\n\n  /**\n   * [socketConnection description]\n   * @return {[type]} [description]\n   */\n  socketConnection(){\n\n    //\n    // Container Config\n    let timeout_val = 5;\n    let path        = '/Applications/MAMP/htdocs/web-compiler/app/src/server/';\n    let vm_name     = 'web_compiler';\n\n    /**\n     * [description]\n     * @param  {[type]} socket [description]\n     * @return {[type]}        [description]\n     */\n    io.on('connection', function (socket) {\n      socket.on('source code', function (data) {\n\n        //\n        // Data\n        let language = data.language;\n        let stdin    = data.stdin;\n\n        //\n        //\n        let folder = 'temp/' + container.random_char(10);\n\n        //\n        // Command to Run\n        let compiler_name  = compilers[language][0];\n        let file           = compilers[language][1];\n        let output_command = compilers[language][2];\n        let language_name  = compilers[language][3];\n        let compiler_args  = compilers[language][4];\n\n        //\n        //\n        let sandbox  = new Sandbox(\n          timeout_val,\n          path,\n          folder,\n          vm_name,\n          compiler_name,\n          file,\n          data.code,\n          output_command,\n          language_name,\n          compiler_args,\n          stdin\n        );\n\n        //\n        // data will contain the output of the compiled/interpreted code\n        // the result maybe normal program output, list of error messages or a Timeout error\n        sandbox.run(function(data){});\n\n\n      });\n    });\n  }\n\n  /**\n   * [random Create random bytes from a given size]\n   * @param  {[string]} size [description]\n   * @return {[type]}      [description]\n   */\n  random_char(size){\n    return crypto.randomBytes(size).toString('hex');\n  }\n\n\n}\n\nlet container = new Container();\ncontainer.socketConnection();\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/modules/container.js","/***\n *      /$$$$$$                            /$$ /$$\n *     /$$__  $$                          | $$| $$\n *    | $$  \\__/  /$$$$$$  /$$$$$$$   /$$$$$$$| $$$$$$$   /$$$$$$  /$$   /$$\n *    |  $$$$$$  |____  $$| $$__  $$ /$$__  $$| $$__  $$ /$$__  $$|  $$ /$$/\n *     \\____  $$  /$$$$$$$| $$  \\ $$| $$  | $$| $$  \\ $$| $$  \\ $$ \\  $$$$/\n *     /$$  \\ $$ /$$__  $$| $$  | $$| $$  | $$| $$  | $$| $$  | $$  >$$  $$\n *    |  $$$$$$/|  $$$$$$$| $$  | $$|  $$$$$$$| $$$$$$$/|  $$$$$$/ /$$/\\  $$\n *     \\______/  \\_______/|__/  |__/ \\_______/|_______/  \\______/ |__/  \\__/\n *\n *\n *\n */\nclass Sandbox{\n\n  /**\n   * [constructor This constructor stores all the arguments needed to prepare and execute a Docker Sandbox]\n   * @param  {[type]} timeout_value  [The Time_out limit for code execution in Docker]\n   * @param  {[type]} path           [The current working directory where the current API folder is kept]\n   * @param  {[type]} folder         [The name of the folder that would be mounted/shared with Docker container, this will be concatenated with path]\n   * @param  {[type]} vm_name        [The TAG of the Docker VM that we wish to execute]\n   * @param  {[type]} compiler_name  [The compiler/interpretor to use for carrying out the translation]\n   * @param  {[type]} file_name      [The file_name to which source code will be written]\n   * @param  {[type]} code           [The actual code]\n   * @param  {[type]} output_command [Used in case of compilers only, to execute the object code, send \" \" in case of interpretors]\n   * @param  {[type]} languageName   [description]\n   * @param  {[type]} e_arguments    [description]\n   * @param  {[type]} stdin_data     [description]\n   * @return {[type]}                [description]\n   */\n  constructor(timeout_value, path,folder, vm_name, compiler_name, file_name,code, output_command,languageName, e_arguments, stdin_data){\n\n    this.timeout_value   = timeout_value;\n    this.path            = path;\n    this.folder          = folder;\n    this.vm_name         = vm_name;\n    this.compiler_name   = compiler_name;\n    this.file_name       = file_name;\n    this.code            = code;\n    this.output_command  = output_command;\n    this.langName        = languageName;\n    this.extra_arguments = e_arguments;\n    this.stdin_data      = stdin_data;\n\n  }\n\n  /**\n   * [run Function that first prepares the Docker environment and then executes the Docker sandbox ]\n   * @param  {[type]} success [description]\n   * @return {[type]}         [description]\n   */\n  run(success){\n\n    let sandbox = new Sandbox(\n      this.timeout_value,\n      this.path,\n      this.folder,\n      this.vm_name,\n      this.compiler_name,\n      this.file_name,\n      this.code,\n      this.output_command,\n      this.langName,\n      this.extra_arguments,\n      this.stdin_data\n    );\n\n    this.prepare(function(e){\n      sandbox.execute(success);\n    })\n\n  }\n\n  /**\n   *\n   * @description Function that creates a directory with the\n   * folder name already provided through constructor\n   * and then copies contents of folder named Payload to the\n   * created folder, this newly created folder will be mounted\n   * on the Docker Container. A file with the name specified in\n   * file_name variable of this class is created and all the\n   * code written in 'code' variable of this class is copied into this file.\n   * Summary: This function produces a folder that contains the source\n   * file and 2 scripts, this folder is mounted to our\n   * Docker container when we run it.\n   *\n   * @param  {[type]} success [description]\n   * @return {[type]}         [description]\n   */\n  prepare(success){\n\n    const exec     = require('child_process').exec;\n    const fs       = require('fs');\n\n    let path       = this.path;\n    let folder     = this.folder;\n    let file_name  = this.file_name;\n    let code       = this.code;\n    let stdin_data = this.stdin_data;\n\n    // Command to Execute\n    // Example: mkdir /temp/5eb3cca437727a17965e && cp /Payload/* /temp/5eb3cca437727a17965e && chmod 777 /temp/5eb3cca437727a17965e\n    let command = `mkdir ${path}${folder} && cp ${path}payload/* ${path}${folder} && chmod 777 ${path}${folder}`;\n\n    //\n    // Executing command\n    exec(command, function(st){\n\n      let file_path = `${path}${folder}/${file_name}`;\n\n      //\n      //\n      // Adding File to the created folder\n      fs.writeFile(file_path, code,function(err){\n\n          //\n          //\n          if (err){\n            console.log(err);\n          }\n\n          //\n          //\n          else {\n\n            //\n            //\n            exec(`chmod 777 ${file_path}`);\n\n            //\n            //\n            fs.writeFile(path + folder+\"/inputFile\", stdin_data, function(err){\n              if (err){\n                console.log(err);\n              }\n              else {\n                console.log(\"Input file was saved!\");\n                success();\n              }\n            });\n\n\n          }\n\n      });\n\n    })\n\n  }\n\n  /**\n   * @precondition prepare() has successfully completed\n   *\n   * @description This function takes the newly created folder prepared by\n   * DockerSandbox.prepare() and spawns a Docker container\n   * with the folder mounted inside the container with\n   * the name '/usercode/' and calls the script.sh file present in that folder\n   * to carry out the compilation. The Sandbox is spawned\n   * ASYNCHRONOUSLY and is supervised for a timeout limit specified in timeout_limit\n   * variable in this class. This function keeps checking for the\n   * file \"Completed\" until the file is created by script.sh or the timeout occurs\n   * In case of timeout an error message is returned back, otherwise\n   * the contents of the file (which could be the program output or log of\n   * compilation error) is returned. In the end the function deletes\n   * the temporary folder and exits\n   * Summary: Run the Docker container and execute script.sh inside it.\n   * Return the output generated and delete the mounted folder\n   *\n   * @param  {[type]} success [description]\n   * @return {[type]}         [description]\n   */\n  execute(success){\n\n    //\n    //\n    const exec = require('child_process').exec;\n    const fs   = require('fs');\n    let myC  = 0; //variable to enforce the timeout_value\n\n    //\n    //\n    let path            = this.path;\n    let folder          = this.folder;\n    let file_name       = this.file_name;\n    let code            = this.code;\n    let stdin_data      = this.stdin_data;\n    let timeout_value   = this.timeout_value;\n    let vm_name         = this.vm_name;\n    let compiler_name   = this.compiler_name;\n    let output_command  = this.output_command;\n    let extra_arguments = this.extra_arguments;\n    let langName        = this.langName;\n\n    // Command to run on the container\n    // /var/www/html/web-compiler/app/src/server/DockerTimeout.sh 5s -u mysql -e 'NODE_PATH=/usr/local/lib/node_modules'\n    // -i -t -v  \"/var/www/html/web-compiler/app/src/server/temp/e2ae1f6b25e828c90d77\":/usercode virtual_machine /usercode/script.sh python file.py\n    let command = `${path}DockerTimeout.sh ${timeout_value}s  -i -t -v \"${path}${folder}\":/usercode ${vm_name} /usercode/script.sh ${compiler_name} ${file_name} ${output_command} ${extra_arguments}`;\n\n    //\n    //\n    // Execute the Docker, This is done ASYNCHRONOUSLY\n    exec(command);\n\n    //\n    //\n    // Check for File named \"completed\" after every 1 second\n    let intid = setInterval(function(){\n\n      //\n      //\n      myC = myC + 1;\n\n      //\n      //\n      //\n      fs.readFile(path + folder + '/completed', 'utf8', function(err, data) {\n\n        //\n        //\n        //\n        // if file is not available yet and the file interval is not yet up carry on\n        if (err && myC < timeout_value){\n          console.log(err);\n          return;\n        }\n\n        //\n        //\n        //\n        // if file is found simply display a message and proceed\n        else if (myC < timeout_value) {\n          console.log(\"DONE\")\n\n          //\n          //check for possible errors\n          fs.readFile(path + folder + '/errors', 'utf8', function(err2, data2){\n            if(!data2) data2=\"\"\n            console.log(\"Error file: \")\n            console.log(data2)\n\n            console.log(\"Main File\")\n            console.log(data)\n\n            let lines = data.toString().split('*-COMPILEBOX::ENDOFOUTPUT-*')\n            data =lines[0]\n            let time = lines[1]\n\n            console.log(\"Time: \")\n            console.log(time)\n\n            success(data,time,data2)\n\n          });\n\n        }\n\n        //\n        //\n        //\n        // if time is up. Save an error message to the data variable\n        else {\n\n          //\n          // Since the time is up, we take the partial output and return it.\n          fs.readFile(path + folder + '/logfile.txt', 'utf8', function(err, data){\n            if (!data) data = \"\";\n            data += \"\\nExecution Timed Out\";\n            console.log(\"Timed Out: \"+folder+\" \"+langName)\n            fs.readFile(path + folder + '/errors', 'utf8', function(err2, data2){\n              if(!data2) data2=\"\"\n\n              let lines = data.toString().split('*---*')\n              data=lines[0]\n              let time=lines[1]\n\n              console.log(\"Time: \")\n              console.log(time)\n\n              success(data,data2)\n            });\n          });\n\n        }\n\n        //\n        //\n        //\n        // now remove the temporary directory\n        console.log(\"ATTEMPTING TO REMOVE: \" + path+folder);\n        console.log(\"------------------------------\")\n        exec(\"rm -r \" + path+folder);\n\n        clearInterval(intid);\n\n      });\n\n    }, 1000);\n\n  }\n}\n\nexport { Sandbox };\n\n\n\n// WEBPACK FOOTER //\n// ./src/server/modules/sandbox.js","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"socket.io\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"socket.io\"\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}